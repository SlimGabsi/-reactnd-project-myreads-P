{"version":3,"sources":["BooksAPI.js","Components/BookAction.js","Components/Book.js","Components/SearchBook.js","Components/Category.js","Components/Bookcase.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","BookAction","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeValue","bind","assertThisInitialized","event","updatedBook","book","shelf","target","value","onUpdateBooks","react_default","a","createElement","className","onChange","disabled","Component","Book","style","width","height","backgroundImage","concat","imageLinks","thumbnail","BookAction_BookAction","title","authors","SearchBook","_handleKeyDown","state","query","searchBooks","books","handleChange","_this2","fetch","method","objectSpread","Content-Type","body","JSON","stringify","then","res","json","data","BooksApi","oldbooks","mergeBooks","setState","catch","err","console","log","newbooks","i","length","j","id","_this3","_this$state","react_router_dom","to","type","placeholder","onKeyDown","_","debounce","map","b","Book_Book","key","Category","categorie","Bookcase","categories","cat","Category_Category","name","onCategorizeBooks","BooksApp","categorizeBooks","updateBooks","catkey","filter","index","findIndex","updatedBooks","prevState","toConsumableArray","BooksAPI","er","react_router","exact","path","element","SearchBook_SearchBook","Bookcase_Bookcase","React","ReactDOM","render","basename","process","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5bd1d83c.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class BookAction extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeValue = this.onChangeValue.bind(this);\r\n  }\r\n  onChangeValue(event) {\r\n    const updatedBook = this.props.book;\r\n    updatedBook.shelf = event.target.value;\r\n    this.props.onUpdateBooks(updatedBook);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"book-shelf-changer\">\r\n        <select\r\n          value={this.props.book.shelf ? this.props.book.shelf : \"none\"}\r\n          onChange={this.onChangeValue}>\r\n          <option value=\"move\" disabled>\r\n            Move to...\r\n          </option>\r\n          <option value=\"currentlyReading\">Currently Reading</option>\r\n          <option value=\"wantToRead\">Want to Read</option>\r\n          <option value=\"read\">Read</option>\r\n          <option value=\"none\">None</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport BookAction from \"./BookAction\";\r\n\r\nexport default class Book extends Component {\r\n  static propTypes = {\r\n    book: PropTypes.object,\r\n  };\r\n\r\n  render() {\r\n    const { book } = this.props;\r\n\r\n    return (\r\n      <li>\r\n        <div className=\"book\">\r\n          <div className=\"book-top\">\r\n            <div\r\n              className=\"book-cover\"\r\n              style={{\r\n                width: 128,\r\n                height: 193,\r\n                backgroundImage: `url(${\r\n                  book.imageLinks\r\n                    ? book.imageLinks.thumbnail\r\n                    : \"icons/book-placeholder.svg\"\r\n                })`,\r\n              }}\r\n            />\r\n            <BookAction book={book} onUpdateBooks={this.props.onUpdateBooks} />\r\n          </div>\r\n          <div className=\"book-title\">{book.title}</div>\r\n          <div className=\"book-authors\">{book.authors}</div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as BooksApi from \"../BooksAPI\";\r\nimport Book from \"./Book\";\r\nimport _ from \"lodash\";\r\nexport default class SearchBook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { query: \"\", books: [] };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.searchBooks = this.searchBooks.bind(this);\r\n    this._handleKeyDown = this._handleKeyDown.bind(this);\r\n  }\r\n\r\n  searchBooks(query) {\r\n    BooksApi.search(query)\r\n      .then((books) => {\r\n        const oldbooks = this.props.books;\r\n        this.mergeBooks(books, oldbooks);\r\n        this.setState({ books: books });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  mergeBooks(newbooks, oldbooks) {\r\n    for (let i = 0; i < newbooks.length; i++) {\r\n      for (let j = 0; j < oldbooks.length; j++) {\r\n        if (newbooks[i].id === oldbooks[j].id) {\r\n          newbooks[i].shelf = oldbooks[j].shelf;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const value = event.target.value;\r\n    this.setState(() => ({\r\n      query: value,\r\n    }));\r\n  }\r\n\r\n  _handleKeyDown = () => {\r\n    this.state.query !== \"\" && this.searchBooks(this.state.query);\r\n  };\r\n\r\n  render() {\r\n    const { query, books } = this.state;\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link className=\"close-search\" to=\"/\">\r\n            Close\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              value={this.state.query}\r\n              onChange={this.handleChange}\r\n              onKeyDown={_.debounce(this._handleKeyDown, 400)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {query !== \"\" &&\r\n              books.length > 0 &&\r\n              this.state.books.map((b) => (\r\n                <Book\r\n                  key={b.id}\r\n                  book={b}\r\n                  onUpdateBooks={this.props.onUpdateBooks}\r\n                />\r\n              ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Book from \"./Book\";\r\nexport default class Category extends Component {\r\n  static propTypes = {\r\n    books: PropTypes.array,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{this.props.categorie}</h2>\r\n            <div className=\"bookshelf-books\">\r\n              <ol className=\"books-grid\">\r\n                {this.props.books.map((b) => (\r\n                  <Book\r\n                    key={b.id}\r\n                    book={b}\r\n                    onUpdateBooks={this.props.onUpdateBooks}\r\n                  />\r\n                ))}{\" \"}\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Category from \"./Category\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class Bookcase extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        {this.props.categories.map((cat) => (\r\n          <Category\r\n            categorie={cat.name}\r\n            onUpdateBooks={this.props.onUpdateBooks}\r\n            key={cat.key}\r\n            books={this.props.onCategorizeBooks(cat.key)}\r\n          />\r\n        ))}\r\n        <div className=\"open-search\">\r\n          <Link to=\"/search\">\r\n            <button>Add a book</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n// import * as BooksAPI from './BooksAPI'\r\nimport \"./App.css\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport SearchBook from \"./Components/SearchBook\";\r\n\r\nimport Bookcase from \"./Components/Bookcase\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nclass BooksApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { books: [] };\r\n    this.categorizeBooks = this.categorizeBooks.bind(this);\r\n    this.updateBooks = this.updateBooks.bind(this);\r\n  }\r\n\r\n  categorizeBooks(catkey) {\r\n    return this.state.books.filter((book) => book.shelf === catkey);\r\n  }\r\n  updateBooks(book) {\r\n    const index = this.state.books.findIndex((b) => b.id === book.id);\r\n    if (index !== -1) {\r\n      const updatedBooks = this.state.books;\r\n      updatedBooks[index] = book;\r\n      this.setState(() => ({\r\n        books: updatedBooks,\r\n      }));\r\n    } else {\r\n      this.setState((prevState) => ({\r\n        books: [...prevState.books, book],\r\n      }));\r\n    }\r\n\r\n    BooksAPI.update(book, book.shelf)\r\n      .then()\r\n      .catch((er) => {\r\n        console.log(er);\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then((books) => this.setState({ books }));\r\n  }\r\n\r\n  render() {\r\n    const categories = [\r\n      { key: \"currentlyReading\", name: \"Currently Reading\" },\r\n      { key: \"wantToRead\", name: \"Want to Read\" },\r\n      { key: \"read\", name: \"Have Read\" },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/search\"\r\n            element={\r\n              <SearchBook\r\n                onUpdateBooks={this.updateBooks}\r\n                books={this.state.books}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            element={\r\n              <Bookcase\r\n                categories={categories}\r\n                onUpdateBooks={this.updateBooks}\r\n                onCategorizeBooks={this.categorizeBooks}\r\n              />\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}